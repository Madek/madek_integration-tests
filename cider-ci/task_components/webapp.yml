traits:
  curl: true

environment_variables:
  WEBAPP_DIR: '{{CIDER_CI_WORKING_DIR}}/webapp'

scripts:

  webapp-configure:
    body: |
      #!/usr/bin/env ruby
      require 'yaml'
      db_config_file = ENV['WEBAPP_DIR'] + '/config/database.yml'
      rails_db_conf = YAML.load_file db_config_file
      rails_db_conf[ENV['RAILS_ENV']]['port'] = Integer(ENV['PGPORT'])
      rails_db_conf[ENV['RAILS_ENV']]['username'] = ENV['PGUSER']
      rails_db_conf[ENV['RAILS_ENV']]['password']= ENV['PGPASSWORD']
      rails_db_conf[ENV['RAILS_ENV']]['pool'] = 5
      IO.write db_config_file, rails_db_conf.to_yaml

  webapp-run:
    body: |
      set -eux
      cd ${WEBAPP_DIR}
      PORT=${WEBAPP_HTTP_PORT} bundle exec rails s
    start_when:
      the db has been created:
        script_key: create-database
      the db has been configure:
        script_key: webapp-configure

  webapp-is-running:
    timeout: 2 Minutes
    body: |
      set -eux
      until curl --silent --fail -I  \
        http://localhost:${WEBAPP_HTTP_PORT}/status;
      do sleep 1; done
    start_when:
      webapp-run is in executing state:
        script_key: webapp-run
        states: [executing]

  test:
    start_when:
      the webapp is running:
        script_key: webapp-is-running

  webapp-shutdown:
    timeout: 5 Seconds
    body: |
      set -eux
      kill -INT $(lsof -t -wni tcp:${WEBAPP_HTTP_PORT})
      sleep 1
    start_when:
      tests are in terminal state:
        script_key: test
        states: [aborted, defective,failed, passed, skipped]
